using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data.SqlClient;
using System.Configuration;
using System.Threading;

namespace AssignmentSystem
{
    public partial class Assignments1 : System.Web.UI.Page
    {

        private Logger _log;


        protected void Page_Load(object sender, EventArgs e)
        {
            Response.Cache.SetNoStore(); //sørger for at en aspx side ikke bliver cached

            if (Session["LoggedIn"] == null)
            {
                Response.Redirect("Login-Page.aspx"); // Hvis sessionen er null, så bliver man smidt tilbage til login siden

                _log = new Logger("0202", "An unautherized user has made an attempt to access Assignments.aspx", "Unauthorized Access Attempt");
                _log.Log();
            }
            else
            {
                lbl_Account.Text = Session["Account"].ToString(); // Viser brugerens information(display name & Email adresse)
            }

            if (Convert.ToInt32(Session["Authority"]) == 3)
            {
                OpgaveView.AutoGenerateDeleteButton = true;
                OpgaveView.AutoGenerateEditButton = true;
                div_tilføj.Visible = true;
            }
            else if (Convert.ToInt32(Session["Authority"]) == 2)
            {
                OpgaveView.AutoGenerateDeleteButton = true;
                OpgaveView.AutoGenerateEditButton = true;
                div_tilføj.Visible = true;
            }
            else
            {
                OpgaveView.AutoGenerateDeleteButton = false;
                OpgaveView.AutoGenerateEditButton = false;
                div_tilføj.Visible = false;
            }
            lbl_Result.Text = string.Empty;
        }

        protected void btn_Logout_OnClick(object sender, EventArgs e)
        {
            _log = new Logger("0", "User " + "'" + Session["User"] + "'" + " Logged out", "Logout");
            _log.Log();

            Session.Clear(); // fjerner alle keys og session values fra den nuværrende session
            Session.Abandon(); // Anullere den nuværende session
            Response.Redirect("Login-Page.aspx"); // sender brugeren tilbage til login siden


        }
        protected void btn_Insert_OnClick(object sender, EventArgs e)
        {
            Assignment insertAssignment = new Assignment(tb_Titel.Text, tb_Beskrivelse.Text, Session["User"].ToString(), Convert.ToDateTime(DateTime.Now.ToShortTimeString()));

            if (insertAssignment.InsertToTable())
            {
                ClientScript.RegisterStartupScript(this.GetType(), "myalert", "alert('" + "Success" + "');", true);
                OpgaveView.DataBind();

                _log = new Logger("0", "User " + "'" + Session["User"] + "'" + " has added " + "'" + tb_Titel.Text + "'", "Assignment Inserted");
                _log.Log();
            }
            else
            {
                lbl_Result.Text = "Der skete en fejl.";
            }
        }

        protected void TandDBSource_Selecting(object sender, SqlDataSourceSelectingEventArgs e)
        {

        }

        protected void OpgaveView_RowDeleting(object sender, GridViewDeleteEventArgs e)
        {
            string usr = OpgaveView.Rows[e.RowIndex].Cells[5].Text;

            if (usr != (string)Session["User"] && (int)Session["Authority"] < 3)
            {
                e.Cancel = true;
                ClientScript.RegisterStartupScript(this.GetType(), "myalert", "alert('" + "You do not have proper rights to delete other users table data" + "');", true);
                _log = new Logger("0", "User: " + Session["User"] + " has attempted to delete from the table, but was denied because of lacking rights", "Assignment deletion");
                _log.Log();
            }
            else
            {
                _log = new Logger("0", "User: " + Session["User"] + " has deleted an assignment in the system", "Assignment deletion");
                _log.Log();
            }

        }

        protected void OpgaveView_RowUpdating(object sender, GridViewUpdateEventArgs e)
        {
            string usr = OpgaveView.Rows[e.RowIndex].Cells[5].Text;

            if (usr != (string)Session["User"] && (int)Session["Authority"] < 3)
            {
                e.Cancel = true;
                ClientScript.RegisterStartupScript(this.GetType(), "myalert", "alert('" + "You do not have proper rights to edit other users table data" + "');", true);
                _log = new Logger("0", "User: " + Session["User"] + " has updated assignment the system", "Assignment Update");
                _log.Log();
            }
            else
            {
                _log = new Logger("0", "User: " + Session["User"] + " has attempted to update a row in the table, but was denied because of lacking rights", "Assignment Update");
                _log.Log();
            }

        }
    }
}